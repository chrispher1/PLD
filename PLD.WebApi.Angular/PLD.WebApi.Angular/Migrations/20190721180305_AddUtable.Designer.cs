// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PLD.WebApi.Angular.Models;

namespace PLD.WebApi.Angular.Migrations
{
    [DbContext(typeof(DMTPLDContext))]
    [Migration("20190721180305_AddUtable")]
    partial class AddUtable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtActCd", b =>
                {
                    b.Property<string>("ActCd")
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(100);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("ActCd");

                    b.ToTable("DMT_ACT_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtAdt", b =>
                {
                    b.Property<int>("AdtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ADT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdtTypCd")
                        .IsRequired()
                        .HasColumnName("ADT_TYP_CD")
                        .HasMaxLength(1);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Pk1Id")
                        .HasColumnName("PK1_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk2Id")
                        .HasColumnName("PK2_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk3Id")
                        .HasColumnName("PK3_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk4Id")
                        .HasColumnName("PK4_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk5Id")
                        .HasColumnName("PK5_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk6Id")
                        .HasColumnName("PK6_ID")
                        .HasMaxLength(25);

                    b.Property<string>("Pk7Id")
                        .HasColumnName("PK7_ID")
                        .HasMaxLength(25);

                    b.Property<string>("SrcName")
                        .IsRequired()
                        .HasColumnName("SRC_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("TblName")
                        .IsRequired()
                        .HasColumnName("TBL_NAME")
                        .HasMaxLength(128);

                    b.HasKey("AdtId");

                    b.HasIndex("AdtTypCd");

                    b.ToTable("DMT_ADT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtAdtDtl", b =>
                {
                    b.Property<int>("AdtDtlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ADT_DTL_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdtId")
                        .HasColumnName("ADT_ID");

                    b.Property<string>("FldName")
                        .IsRequired()
                        .HasColumnName("FLD_NAME")
                        .HasMaxLength(128);

                    b.Property<string>("NewVal")
                        .HasColumnName("NEW_VAL")
                        .HasMaxLength(4000);

                    b.Property<string>("OldVal")
                        .HasColumnName("OLD_VAL")
                        .HasMaxLength(4000);

                    b.HasKey("AdtDtlId");

                    b.HasIndex("AdtId");

                    b.ToTable("DMT_ADT_DTL");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtAdtTypCd", b =>
                {
                    b.Property<string>("AdtTypCd")
                        .HasColumnName("ADT_TYP_CD")
                        .HasMaxLength(1);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("AdtTypCd");

                    b.ToTable("DMT_ADT_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCal", b =>
                {
                    b.Property<int>("CalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CAL_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CsrPrvdr")
                        .HasColumnName("CSR_PRVDR")
                        .HasMaxLength(100);

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(500);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.HasKey("CalId");

                    b.ToTable("DMT_CAL");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCalEntry", b =>
                {
                    b.Property<int>("CalEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CAL_ENTRY_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalId")
                        .HasColumnName("CAL_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("EndDt")
                        .HasColumnName("END_DT")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("EndTm")
                        .HasColumnName("END_TM")
                        .HasColumnType("time(0)");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("PrntCalEntryId")
                        .HasColumnName("PRNT_CAL_ENTRY_ID");

                    b.Property<string>("RruleTxt")
                        .HasColumnName("RRULE_TXT")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("StartDt")
                        .HasColumnName("START_DT")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("StartTm")
                        .HasColumnName("START_TM")
                        .HasColumnType("time(0)");

                    b.Property<int?>("SubjRefId")
                        .HasColumnName("SUBJ_REF_ID");

                    b.Property<string>("SubjTxt")
                        .IsRequired()
                        .HasColumnName("SUBJ_TXT")
                        .HasMaxLength(500);

                    b.HasKey("CalEntryId");

                    b.ToTable("DMT_CAL_ENTRY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCarr", b =>
                {
                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CarrCd")
                        .IsRequired()
                        .HasColumnName("CARR_CD")
                        .HasMaxLength(25);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.HasKey("CarrId");

                    b.ToTable("DMT_CARR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCarrFbga", b =>
                {
                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CarrId", "FbId", "GaId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_CARR_FBGA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCase", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalCoveragesIndicator")
                        .HasColumnName("ADDITIONAL_COVERAGES_INDICATOR")
                        .HasMaxLength(5);

                    b.Property<decimal?>("Amount1035")
                        .HasColumnName("AMOUNT_1035")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("AnnualizedPremium")
                        .HasColumnName("ANNUALIZED_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("AppRecieptDate")
                        .HasColumnName("APP_RECIEPT_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("AppSignDate")
                        .HasColumnName("APP_SIGN_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnName("APPLICATION_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("ApplicationId")
                        .HasColumnName("APPLICATION_ID")
                        .HasMaxLength(12);

                    b.Property<string>("ApplicationType")
                        .HasColumnName("APPLICATION_TYPE")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnName("APPROVAL_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("BalanceOfPremiumDue")
                        .HasColumnName("BALANCE_OF_PREMIUM_DUE")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CarrierActName")
                        .HasColumnName("CARRIER_ACT_NAME")
                        .HasMaxLength(40);

                    b.Property<string>("CarrierCasemgrEmail")
                        .HasColumnName("CARRIER_CASEMGR_EMAIL")
                        .HasMaxLength(80);

                    b.Property<string>("CarrierCasemgrName")
                        .HasColumnName("CARRIER_CASEMGR_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("CarrierCasemgrPhone")
                        .HasColumnName("CARRIER_CASEMGR_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CarrierUnderwriterEmail")
                        .HasColumnName("CARRIER_UNDERWRITER_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("CarrierUnderwriterName")
                        .HasColumnName("CARRIER_UNDERWRITER_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("CarrierUnderwriterPhone")
                        .HasColumnName("CARRIER_UNDERWRITER_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CarrierUwContactid")
                        .HasColumnName("CARRIER_UW_CONTACTID")
                        .HasMaxLength(18);

                    b.Property<string>("CarrierUwRole")
                        .HasColumnName("CARRIER_UW_ROLE")
                        .HasMaxLength(30);

                    b.Property<string>("Carrierid")
                        .IsRequired()
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<string>("CaseIdC")
                        .HasColumnName("CASE_ID_C")
                        .HasMaxLength(20);

                    b.Property<string>("CaseMgrName")
                        .HasColumnName("CASE_MGR_NAME")
                        .HasMaxLength(80);

                    b.Property<string>("CaseMgrSlIdC")
                        .HasColumnName("CASE_MGR_SL_ID_C")
                        .HasMaxLength(18);

                    b.Property<string>("CaseType")
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<decimal?>("CashWithApp")
                        .HasColumnName("CASH_WITH_APP")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("ClassName")
                        .HasColumnName("CLASS_NAME")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("CommPaidDate")
                        .HasColumnName("COMM_PAID_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CoverageType")
                        .HasColumnName("COVERAGE_TYPE")
                        .HasMaxLength(60);

                    b.Property<string>("CoveredLives")
                        .HasColumnName("COVERED_LIVES")
                        .HasMaxLength(25);

                    b.Property<string>("CrtBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateEnteredC")
                        .HasColumnName("DATE_ENTERED_C")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("DeathBenefitAmt")
                        .HasColumnName("DEATH_BENEFIT_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("DeathBenefitType")
                        .HasColumnName("DEATH_BENEFIT_TYPE")
                        .HasMaxLength(30);

                    b.Property<decimal?>("ExcessPremium")
                        .HasColumnName("EXCESS_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("FaceAmt")
                        .HasColumnName("FACE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<DateTime?>("FlatEndDate")
                        .HasColumnName("FLAT_END_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("FlatExtraAmount")
                        .HasColumnName("FLAT_EXTRA_AMOUNT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<decimal?>("InitialPremiumPayment")
                        .HasColumnName("INITIAL_PREMIUM_PAYMENT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("IssueAge")
                        .HasColumnName("ISSUE_AGE");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnName("ISSUE_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("IssueState")
                        .HasColumnName("ISSUE_STATE")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnName("LAST_ACTIVITY_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("LastUwActivity")
                        .HasColumnName("LAST_UW_ACTIVITY")
                        .HasMaxLength(20);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("ModalPremium")
                        .HasColumnName("MODAL_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("MoneyTransferType")
                        .HasColumnName("MONEY_TRANSFER_TYPE")
                        .HasMaxLength(60);

                    b.Property<string>("PaymentMethod")
                        .HasColumnName("PAYMENT_METHOD")
                        .HasMaxLength(75);

                    b.Property<string>("PermanentTableRating")
                        .HasColumnName("PERMANENT_TABLE_RATING")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("PlacementExpDate")
                        .HasColumnName("PLACEMENT_EXP_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("PolicyEffDate")
                        .HasColumnName("POLICY_EFF_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnName("POLICY_NUMBER")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PolicyPlacedDate")
                        .HasColumnName("POLICY_PLACED_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PremiumMode")
                        .HasColumnName("PREMIUM_MODE")
                        .HasMaxLength(50);

                    b.Property<string>("PrimInsCity")
                        .HasColumnName("PRIM_INS_CITY")
                        .HasMaxLength(50);

                    b.Property<string>("PrimInsFirstname")
                        .HasColumnName("PRIM_INS_FIRSTNAME")
                        .HasMaxLength(30);

                    b.Property<int?>("PrimInsIssueAge")
                        .HasColumnName("PRIM_INS_ISSUE_AGE");

                    b.Property<string>("PrimInsLastname")
                        .HasColumnName("PRIM_INS_LASTNAME")
                        .HasMaxLength(30);

                    b.Property<string>("PrimInsMiddlename")
                        .HasColumnName("PRIM_INS_MIDDLENAME")
                        .HasMaxLength(30);

                    b.Property<string>("PrimInsState")
                        .HasColumnName("PRIM_INS_STATE")
                        .HasMaxLength(2);

                    b.Property<string>("PrimInsSuffix")
                        .HasColumnName("PRIM_INS_SUFFIX")
                        .HasMaxLength(3);

                    b.Property<string>("PrimInsZip")
                        .HasColumnName("PRIM_INS_ZIP")
                        .HasMaxLength(10);

                    b.Property<int?>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("ProdTypId")
                        .HasColumnName("PROD_TYP_ID");

                    b.Property<string>("ProductName")
                        .HasColumnName("PRODUCT_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("ProductType")
                        .HasColumnName("PRODUCT_TYPE")
                        .HasMaxLength(40);

                    b.Property<string>("RecordType")
                        .HasColumnName("RECORD_TYPE")
                        .HasMaxLength(15);

                    b.Property<string>("SlCarrierCmContactid")
                        .HasColumnName("SL_CARRIER_CM_CONTACTID")
                        .HasMaxLength(18);

                    b.Property<string>("SlCaseId")
                        .HasColumnName("SL_CASE_ID")
                        .HasMaxLength(18);

                    b.Property<string>("Status")
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StatusDateC")
                        .HasColumnName("STATUS_DATE_C")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("StatusReasonC")
                        .HasColumnName("STATUS_REASON_C")
                        .HasMaxLength(100);

                    b.Property<string>("SubStatus")
                        .HasColumnName("SUB_STATUS")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TargetPremAmt")
                        .HasColumnName("TARGET_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("TobaccoUsage")
                        .HasColumnName("TOBACCO_USAGE")
                        .HasMaxLength(60);

                    b.Property<decimal?>("TotalCashWithApp")
                        .HasColumnName("TOTAL_CASH_WITH_APP")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("UwClass")
                        .HasColumnName("UW_CLASS")
                        .HasMaxLength(60);

                    b.Property<decimal?>("WeightedPremiumMeasure")
                        .HasColumnName("WEIGHTED_PREMIUM_MEASURE")
                        .HasColumnType("numeric(16, 2)");

                    b.HasKey("CaseId");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.HasIndex("ProdId");

                    b.HasIndex("ProdTypId");

                    b.ToTable("DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAddCov", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<int>("AddCovSeqRecNum")
                        .HasColumnName("ADD_COV_SEQ_REC_NUM");

                    b.Property<string>("AddlCvgCaseNum")
                        .HasColumnName("ADDL_CVG_CASE_NUM")
                        .HasMaxLength(20);

                    b.Property<string>("AddlCvgCoverage")
                        .HasColumnName("ADDL_CVG_COVERAGE")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgCoverageLives")
                        .HasColumnName("ADDL_CVG_COVERAGE_LIVES")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgCoverageType")
                        .HasColumnName("ADDL_CVG_COVERAGE_TYPE")
                        .HasMaxLength(50);

                    b.Property<int?>("AddlCvgCurrNumUnits")
                        .HasColumnName("ADDL_CVG_CURR_NUM_UNITS");

                    b.Property<decimal?>("AddlCvgCurrentAmt")
                        .HasColumnName("ADDL_CVG_CURRENT_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("AddlCvgDeathBeneAmt")
                        .HasColumnName("ADDL_CVG_DEATH_BENE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("AddlCvgPlanName")
                        .HasColumnName("ADDL_CVG_PLAN_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgSlId")
                        .HasColumnName("ADDL_CVG_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("AddlCvgValuePerUnit")
                        .HasColumnName("ADDL_CVG_VALUE_PER_UNIT")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("AddlLastmodifiedDate")
                        .HasColumnName("ADDL_LASTMODIFIED_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CaseId", "AddCovSeqRecNum");

                    b.ToTable("DMT_CASE_ADD_COV");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAddCovHist", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CaseHistTs")
                        .HasColumnName("CASE_HIST_TS")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("AddCovSeqReqNum")
                        .HasColumnName("ADD_COV_SEQ_REQ_NUM");

                    b.Property<string>("AddlCvgCaseNum")
                        .HasColumnName("ADDL_CVG_CASE_NUM")
                        .HasMaxLength(20);

                    b.Property<string>("AddlCvgCoverage")
                        .HasColumnName("ADDL_CVG_COVERAGE")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgCoverageLives")
                        .HasColumnName("ADDL_CVG_COVERAGE_LIVES")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgCoverageType")
                        .HasColumnName("ADDL_CVG_COVERAGE_TYPE")
                        .HasMaxLength(50);

                    b.Property<int?>("AddlCvgCurrNumUnits")
                        .HasColumnName("ADDL_CVG_CURR_NUM_UNITS");

                    b.Property<decimal?>("AddlCvgCurrentAmt")
                        .HasColumnName("ADDL_CVG_CURRENT_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("AddlCvgDeathBeneAmt")
                        .HasColumnName("ADDL_CVG_DEATH_BENE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("AddlCvgLastmodifiedDate")
                        .HasColumnName("ADDL_CVG_LASTMODIFIED_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("AddlCvgPlanName")
                        .HasColumnName("ADDL_CVG_PLAN_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("AddlCvgSlId")
                        .HasColumnName("ADDL_CVG_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("AddlCvgValuePerUnits")
                        .HasColumnName("ADDL_CVG_VALUE_PER_UNITS")
                        .HasMaxLength(20);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CaseId", "CaseHistTs", "AddCovSeqReqNum");

                    b.ToTable("DMT_CASE_ADD_COV_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAgnt", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<int>("AgntSeqRecNum")
                        .HasColumnName("AGNT_SEQ_REC_NUM");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .HasColumnName("CRT_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("FaAsstEmail")
                        .HasColumnName("FA_ASST_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("FaAsstPhone")
                        .HasColumnName("FA_ASST_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("FaAsstname")
                        .HasColumnName("FA_ASSTNAME")
                        .HasMaxLength(60);

                    b.Property<string>("FaBusinessCity")
                        .HasColumnName("FA_BUSINESS_CITY")
                        .HasMaxLength(50);

                    b.Property<string>("FaBusinessCountry")
                        .HasColumnName("FA_BUSINESS_COUNTRY")
                        .HasMaxLength(3);

                    b.Property<string>("FaBusinessState")
                        .HasColumnName("FA_BUSINESS_STATE")
                        .HasMaxLength(3);

                    b.Property<string>("FaBusinessStreet1")
                        .HasColumnName("FA_BUSINESS_STREET_1")
                        .HasMaxLength(50);

                    b.Property<string>("FaBusinessStreet2")
                        .HasColumnName("FA_BUSINESS_STREET_2")
                        .HasMaxLength(50);

                    b.Property<string>("FaBusinessZipCode")
                        .HasColumnName("FA_BUSINESS_ZIP_CODE")
                        .HasMaxLength(10);

                    b.Property<string>("FaEmail")
                        .HasColumnName("FA_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("FaFirmRegion")
                        .HasColumnName("FA_FIRM_REGION")
                        .HasMaxLength(3);

                    b.Property<decimal?>("FaLatitude")
                        .HasColumnName("FA_LATITUDE")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<decimal?>("FaLongtitude")
                        .HasColumnName("FA_LONGTITUDE")
                        .HasColumnType("decimal(13, 10)");

                    b.Property<string>("FaName")
                        .HasColumnName("FA_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("FaNpn")
                        .HasColumnName("FA_NPN")
                        .HasMaxLength(10);

                    b.Property<string>("FaPhone")
                        .HasColumnName("FA_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("FaPosition")
                        .HasColumnName("FA_POSITION")
                        .HasMaxLength(100);

                    b.Property<string>("FaSlContactId")
                        .HasColumnName("FA_SL_CONTACT_ID")
                        .HasMaxLength(18);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CaseId", "AgntSeqRecNum");

                    b.ToTable("DMT_CASE_AGNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseCmnt", b =>
                {
                    b.Property<int>("CaseCmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_CMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CmntTxt")
                        .IsRequired()
                        .HasColumnName("CMNT_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseCmntId");

                    b.HasIndex("CaseId");

                    b.ToTable("DMT_CASE_CMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseHist", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CaseHistTs")
                        .HasColumnName("CASE_HIST_TS")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("AdditionalCoveragesIndicator")
                        .HasColumnName("ADDITIONAL_COVERAGES_INDICATOR")
                        .HasMaxLength(5);

                    b.Property<decimal?>("Amount1035")
                        .HasColumnName("AMOUNT_1035")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("AnnualizedPremium")
                        .HasColumnName("ANNUALIZED_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("AppReceiptDate")
                        .HasColumnName("APP_RECEIPT_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("AppSignDate")
                        .HasColumnName("APP_SIGN_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnName("APPLICATION_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("ApplicationId")
                        .HasColumnName("APPLICATION_ID")
                        .HasMaxLength(12);

                    b.Property<string>("ApplicationType")
                        .HasColumnName("APPLICATION_TYPE")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnName("APPROVAL_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("BalanceOfPremiumDue")
                        .HasColumnName("BALANCE_OF_PREMIUM_DUE")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CarrierAcctName")
                        .HasColumnName("CARRIER_ACCT_NAME")
                        .HasMaxLength(40);

                    b.Property<string>("CarrierCasemgrEmail")
                        .HasColumnName("CARRIER_CASEMGR_EMAIL")
                        .HasMaxLength(80);

                    b.Property<string>("CarrierCasemgrName")
                        .HasColumnName("CARRIER_CASEMGR_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("CarrierCasemgrPhone")
                        .HasColumnName("CARRIER_CASEMGR_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CarrierUnderwriterEmail")
                        .HasColumnName("CARRIER_UNDERWRITER_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("CarrierUnderwriterName")
                        .HasColumnName("CARRIER_UNDERWRITER_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("CarrierUnderwriterPhone")
                        .HasColumnName("CARRIER_UNDERWRITER_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CarrierUwContactid")
                        .HasColumnName("CARRIER_UW_CONTACTID")
                        .HasMaxLength(18);

                    b.Property<string>("CarrierUwRole")
                        .HasColumnName("CARRIER_UW_ROLE")
                        .HasMaxLength(30);

                    b.Property<string>("Carrierid")
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<string>("CaseIdC")
                        .HasColumnName("CASE_ID_C")
                        .HasMaxLength(20);

                    b.Property<string>("CaseMgrName")
                        .HasColumnName("CASE_MGR_NAME")
                        .HasMaxLength(80);

                    b.Property<string>("CaseMgrSlId")
                        .HasColumnName("CASE_MGR_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("CaseType")
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<decimal?>("CashWithApp")
                        .HasColumnName("CASH_WITH_APP")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("ClassName")
                        .HasColumnName("CLASS_NAME")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("CommPaidDate")
                        .HasColumnName("COMM_PAID_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CoverageType")
                        .HasColumnName("COVERAGE_TYPE")
                        .HasMaxLength(60);

                    b.Property<string>("CoveredLives")
                        .HasColumnName("COVERED_LIVES")
                        .HasMaxLength(25);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateEnteredC")
                        .HasColumnName("DATE_ENTERED_C")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("DeathBenefitAmt")
                        .HasColumnName("DEATH_BENEFIT_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("DeathBenefitType")
                        .HasColumnName("DEATH_BENEFIT_TYPE")
                        .HasMaxLength(30);

                    b.Property<decimal?>("ExcessPremium")
                        .HasColumnName("EXCESS_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("FaceAmt")
                        .HasColumnName("FACE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<DateTime?>("FlatEndDate")
                        .HasColumnName("FLAT_END_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("FlatExtraAmount")
                        .HasColumnName("FLAT_EXTRA_AMOUNT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<decimal?>("InitialPremiumPayment")
                        .HasColumnName("INITIAL_PREMIUM_PAYMENT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("IssueAge")
                        .HasColumnName("ISSUE_AGE");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnName("ISSUE_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("IssueState")
                        .HasColumnName("ISSUE_STATE")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnName("LAST_ACTIVITY_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("LastUwActivity")
                        .HasColumnName("LAST_UW_ACTIVITY")
                        .HasMaxLength(20);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("ModalPremium")
                        .HasColumnName("MODAL_PREMIUM")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("MoneyTransferType")
                        .HasColumnName("MONEY_TRANSFER_TYPE")
                        .HasMaxLength(60);

                    b.Property<string>("PaymentMethod")
                        .HasColumnName("PAYMENT_METHOD")
                        .HasMaxLength(75);

                    b.Property<string>("PermanentTableRating")
                        .HasColumnName("PERMANENT_TABLE_RATING")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("PlacementExpDate")
                        .HasColumnName("PLACEMENT_EXP_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("PolicyEffDate")
                        .HasColumnName("POLICY_EFF_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnName("POLICY_NUMBER")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PolicyPlacedDate")
                        .HasColumnName("POLICY_PLACED_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PremiumMode")
                        .HasColumnName("PREMIUM_MODE")
                        .HasMaxLength(50);

                    b.Property<string>("PrimInsCity")
                        .HasColumnName("PRIM_INS_CITY")
                        .HasMaxLength(50);

                    b.Property<string>("PrimInsFirstname")
                        .HasColumnName("PRIM_INS_FIRSTNAME")
                        .HasMaxLength(30);

                    b.Property<int?>("PrimInsIssueAge")
                        .HasColumnName("PRIM_INS_ISSUE_AGE");

                    b.Property<string>("PrimInsLastname")
                        .HasColumnName("PRIM_INS_LASTNAME")
                        .HasMaxLength(30);

                    b.Property<string>("PrimInsMiddlename")
                        .HasColumnName("PRIM_INS_MIDDLENAME")
                        .HasMaxLength(30);

                    b.Property<string>("PrimInsState")
                        .HasColumnName("PRIM_INS_STATE")
                        .HasMaxLength(2);

                    b.Property<string>("PrimInsSuffix")
                        .HasColumnName("PRIM_INS_SUFFIX")
                        .HasMaxLength(3);

                    b.Property<string>("PrimInsZip")
                        .HasColumnName("PRIM_INS_ZIP")
                        .HasMaxLength(10);

                    b.Property<int?>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("ProdTypId")
                        .HasColumnName("PROD_TYP_ID");

                    b.Property<string>("ProductName")
                        .HasColumnName("PRODUCT_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("ProductType")
                        .HasColumnName("PRODUCT_TYPE")
                        .HasMaxLength(40);

                    b.Property<string>("RecordType")
                        .HasColumnName("RECORD_TYPE")
                        .HasMaxLength(15);

                    b.Property<string>("SlCarrierCmContactid")
                        .HasColumnName("SL_CARRIER_CM_CONTACTID")
                        .HasMaxLength(18);

                    b.Property<string>("SlCaseId")
                        .HasColumnName("SL_CASE_ID")
                        .HasMaxLength(18);

                    b.Property<string>("Status")
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StatusDateC")
                        .HasColumnName("STATUS_DATE_C")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("StatusReasonC")
                        .HasColumnName("STATUS_REASON_C")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("SubStatus")
                        .HasColumnName("SUB_STATUS")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TargetPremAmt")
                        .HasColumnName("TARGET_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("TobaccoUsage")
                        .HasColumnName("TOBACCO_USAGE")
                        .HasMaxLength(60);

                    b.Property<decimal?>("TotalCashWithApp")
                        .HasColumnName("TOTAL_CASH_WITH_APP")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("UwClass")
                        .HasColumnName("UW_CLASS")
                        .HasMaxLength(60);

                    b.Property<decimal?>("WeightedPremiumMeasure")
                        .HasColumnName("WEIGHTED_PREMIUM_MEASURE")
                        .HasColumnType("numeric(16, 2)");

                    b.HasKey("CaseId", "CaseHistTs");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.HasIndex("ProdId");

                    b.HasIndex("ProdTypId");

                    b.ToTable("DMT_CASE_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseLifePartic", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<int>("LifeParticSeqRecNum")
                        .HasColumnName("LIFE_PARTIC_SEQ_REC_NUM");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LifePartClassName")
                        .HasColumnName("LIFE_PART_CLASS_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartCoverageName")
                        .HasColumnName("LIFE_PART_COVERAGE_NAME")
                        .HasMaxLength(50);

                    b.Property<int?>("LifePartIssueAge")
                        .HasColumnName("LIFE_PART_ISSUE_AGE");

                    b.Property<string>("LifePartIssueGender")
                        .HasColumnName("LIFE_PART_ISSUE_GENDER")
                        .HasMaxLength(10);

                    b.Property<string>("LifePartLastModifiedDate")
                        .HasColumnName("LIFE_PART_LAST_MODIFIED_DATE")
                        .HasMaxLength(25);

                    b.Property<string>("LifePartPermRating")
                        .HasColumnName("LIFE_PART_PERM_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartPermTableRating")
                        .HasColumnName("LIFE_PART_PERM_TABLE_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartRole")
                        .HasColumnName("LIFE_PART_ROLE")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartSlId")
                        .HasColumnName("LIFE_PART_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("LifePartTempRating")
                        .HasColumnName("LIFE_PART_TEMP_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartTobacco")
                        .HasColumnName("LIFE_PART_TOBACCO")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartUwClass")
                        .HasColumnName("LIFE_PART_UW_CLASS")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartUwSubClass")
                        .HasColumnName("LIFE_PART_UW_SUB_CLASS")
                        .HasMaxLength(50);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CaseId", "LifeParticSeqRecNum");

                    b.ToTable("DMT_CASE_LIFE_PARTIC");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseLifeParticHist", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CaseHistTs")
                        .HasColumnName("CASE_HIST_TS")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("LifeParticSeqRecNum")
                        .HasColumnName("LIFE_PARTIC_SEQ_REC_NUM");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LifePartClassName")
                        .HasColumnName("LIFE_PART_CLASS_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartCoverageName")
                        .HasColumnName("LIFE_PART_COVERAGE_NAME")
                        .HasMaxLength(50);

                    b.Property<int?>("LifePartIssueAge")
                        .HasColumnName("LIFE_PART_ISSUE_AGE");

                    b.Property<string>("LifePartIssueGender")
                        .HasColumnName("LIFE_PART_ISSUE_GENDER")
                        .HasMaxLength(10);

                    b.Property<string>("LifePartLastModifiedDate")
                        .HasColumnName("LIFE_PART_LAST_MODIFIED_DATE")
                        .HasMaxLength(25);

                    b.Property<string>("LifePartPermRating")
                        .HasColumnName("LIFE_PART_PERM_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartPermTableRating")
                        .HasColumnName("LIFE_PART_PERM_TABLE_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartRole")
                        .HasColumnName("LIFE_PART_ROLE")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartSlId")
                        .HasColumnName("LIFE_PART_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("LifePartTempRating")
                        .HasColumnName("LIFE_PART_TEMP_RATING")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartTobacco")
                        .HasColumnName("LIFE_PART_TOBACCO")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartUwClass")
                        .HasColumnName("LIFE_PART_UW_CLASS")
                        .HasMaxLength(50);

                    b.Property<string>("LifePartUwSubClass")
                        .HasColumnName("LIFE_PART_UW_SUB_CLASS")
                        .HasMaxLength(50);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("CaseId", "CaseHistTs", "LifeParticSeqRecNum");

                    b.ToTable("DMT_CASE_LIFE_PARTIC_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseMsg", b =>
                {
                    b.Property<int>("CaseMsgId")
                        .HasColumnName("CASE_MSG_ID");

                    b.Property<bool?>("AccptInd")
                        .HasColumnName("ACCPT_IND");

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MsgCd")
                        .IsRequired()
                        .HasColumnName("MSG_CD")
                        .HasMaxLength(25);

                    b.Property<string>("MsgTxt")
                        .HasColumnName("MSG_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("MsgTypCd")
                        .HasColumnName("MSG_TYP_CD")
                        .HasMaxLength(10);

                    b.Property<string>("TechMsgTxt")
                        .HasColumnName("TECH_MSG_TXT")
                        .HasMaxLength(4000);

                    b.HasKey("CaseMsgId");

                    b.HasIndex("MsgCd");

                    b.HasIndex("MsgTypCd");

                    b.ToTable("DMT_CASE_MSG");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseRsvp", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<int>("RsvpSeqRecNum")
                        .HasColumnName("RSVP_SEQ_REC_NUM");

                    b.Property<string>("CaseMgrEmail")
                        .HasColumnName("CASE_MGR_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("CaseMgrPhone")
                        .HasColumnName("CASE_MGR_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CaseMgrRolename")
                        .HasColumnName("CASE_MGR_ROLENAME")
                        .HasMaxLength(20);

                    b.Property<string>("CmSlId")
                        .HasColumnName("CM_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IwEmail")
                        .HasColumnName("IW_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("IwName")
                        .HasColumnName("IW_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("IwPhone")
                        .HasColumnName("IW_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("IwRoleName")
                        .HasColumnName("IW_ROLE_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("IwSlId")
                        .HasColumnName("IW_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpEmail")
                        .HasColumnName("RSVP_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpPhone")
                        .HasColumnName("RSVP_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("RsvpRoleName")
                        .HasColumnName("RSVP_ROLE_NAME")
                        .HasMaxLength(5);

                    b.Property<string>("RsvpSlId")
                        .HasColumnName("RSVP_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("RsvpStaffCode")
                        .HasColumnName("RSVP_STAFF_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("RsvpTerritory")
                        .HasColumnName("RSVP_TERRITORY")
                        .HasMaxLength(25);

                    b.HasKey("CaseId", "RsvpSeqRecNum");

                    b.ToTable("DMT_CASE_RSVP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseRsvpHist", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CaseHistTs")
                        .HasColumnName("CASE_HIST_TS")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("RsvpSeqRecNum")
                        .HasColumnName("RSVP_SEQ_REC_NUM");

                    b.Property<string>("CaseMgrEmail")
                        .HasColumnName("CASE_MGR_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("CaseMgrPhone")
                        .HasColumnName("CASE_MGR_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("CaseMgrRolename")
                        .HasColumnName("CASE_MGR_ROLENAME")
                        .HasMaxLength(20);

                    b.Property<string>("CmSlId")
                        .HasColumnName("CM_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IwEmail")
                        .HasColumnName("IW_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("IwName")
                        .HasColumnName("IW_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("IwPhone")
                        .HasColumnName("IW_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("IwRoleName")
                        .HasColumnName("IW_ROLE_NAME")
                        .HasMaxLength(20);

                    b.Property<string>("IwSlId")
                        .HasColumnName("IW_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpEmail")
                        .HasColumnName("RSVP_EMAIL")
                        .HasMaxLength(50);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpPhone")
                        .HasColumnName("RSVP_PHONE")
                        .HasMaxLength(14);

                    b.Property<string>("RsvpRoleName")
                        .HasColumnName("RSVP_ROLE_NAME")
                        .HasMaxLength(5);

                    b.Property<string>("RsvpSlId")
                        .HasColumnName("RSVP_SL_ID")
                        .HasMaxLength(18);

                    b.Property<string>("RsvpStaffCode")
                        .HasColumnName("RSVP_STAFF_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("RsvpTerritory")
                        .HasColumnName("RSVP_TERRITORY")
                        .HasMaxLength(25);

                    b.HasKey("CaseId", "CaseHistTs", "RsvpSeqRecNum");

                    b.ToTable("DMT_CASE_RSVP_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWp", b =>
                {
                    b.Property<int>("CaseWpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_WP_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovById")
                        .HasColumnName("APPROV_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ApprovDt")
                        .HasColumnName("APPROV_DT")
                        .HasColumnType("datetime");

                    b.Property<bool>("ApprovInd")
                        .HasColumnName("APPROV_IND");

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<int?>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EffDt")
                        .HasColumnName("EFF_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.Property<string>("StatCd")
                        .HasColumnName("STAT_CD")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StatDt")
                        .HasColumnName("STAT_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("SysStatCd")
                        .HasColumnName("SYS_STAT_CD")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("SysStatDt")
                        .HasColumnName("SYS_STAT_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("VoidById")
                        .HasColumnName("VOID_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("VoidDt")
                        .HasColumnName("VOID_DT")
                        .HasColumnType("datetime");

                    b.Property<bool>("VoidInd")
                        .HasColumnName("VOID_IND");

                    b.Property<decimal?>("WpAmt")
                        .HasColumnName("WP_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("WpTypCd")
                        .HasColumnName("WP_TYP_CD")
                        .HasMaxLength(4);

                    b.HasKey("CaseWpId");

                    b.ToTable("DMT_CASE_WP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpCmnt", b =>
                {
                    b.Property<int>("CaseWpCmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_WP_CMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseWpId")
                        .HasColumnName("CASE_WP_ID");

                    b.Property<string>("CmntTxt")
                        .HasColumnName("CMNT_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("CrtBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseWpCmntId");

                    b.ToTable("DMT_CASE_WP_CMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpNet", b =>
                {
                    b.Property<int>("CaseWpNetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_WP_NET_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AsOfDt")
                        .HasColumnName("AS_OF_DT")
                        .HasColumnType("datetime");

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CryById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRY_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<decimal?>("WpNetAmt")
                        .HasColumnName("WP_NET_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("WpTypCd")
                        .HasColumnName("WP_TYP_CD")
                        .HasMaxLength(4);

                    b.HasKey("CaseWpNetId");

                    b.ToTable("DMT_CASE_WP_NET");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpRsvp", b =>
                {
                    b.Property<int>("CaseWpRsvpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASE_WP_RSVP_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.HasKey("CaseWpRsvpId");

                    b.HasIndex("CaseId");

                    b.ToTable("DMT_CASE_WP_RSVP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpSnpsht", b =>
                {
                    b.Property<int>("CaseWpId")
                        .HasColumnName("CASE_WP_ID");

                    b.Property<string>("CarrName")
                        .HasColumnName("CARR_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("Carrierid")
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseType")
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CrtTs")
                        .HasColumnName("CRT_TS");

                    b.Property<DateTime?>("EffDt")
                        .HasColumnName("EFF_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.Property<string>("Status")
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<decimal>("WpAmt")
                        .HasColumnName("WP_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.HasKey("CaseWpId");

                    b.ToTable("DMT_CASE_WP_SNPSHT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpSnpshtHist", b =>
                {
                    b.Property<int>("CaseWpId")
                        .HasColumnName("CASE_WP_ID");

                    b.Property<string>("CarrName")
                        .HasColumnName("CARR_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("Carrierid")
                        .IsRequired()
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("CrtDt")
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CrtTs")
                        .HasColumnName("CRT_TS");

                    b.Property<DateTime>("EffDt")
                        .HasColumnName("EFF_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<decimal>("WpAmt")
                        .HasColumnName("WP_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.HasKey("CaseWpId");

                    b.ToTable("DMT_CASE_WP_SNPSHT_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashRecon", b =>
                {
                    b.Property<int>("CashReconId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASH_RECON_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttstBalById")
                        .HasColumnName("ATTST_BAL_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AttstBalDt")
                        .HasColumnName("ATTST_BAL_DT")
                        .HasColumnType("datetime");

                    b.Property<bool?>("AttstBalInd")
                        .HasColumnName("ATTST_BAL_IND");

                    b.Property<decimal?>("BalAmt")
                        .HasColumnName("BAL_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaySumAmt")
                        .HasColumnName("PAY_SUM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("StmntSumAmt")
                        .HasColumnName("STMNT_SUM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.HasKey("CashReconId");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_CASH_RECON");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconCmnt", b =>
                {
                    b.Property<int>("CashReconCmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CASH_RECON_CMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashReconId")
                        .HasColumnName("CASH_RECON_ID");

                    b.Property<string>("CmntTxt")
                        .HasColumnName("CMNT_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CashReconCmntId");

                    b.HasIndex("CashReconId");

                    b.ToTable("DMT_CASH_RECON_CMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconPay", b =>
                {
                    b.Property<int>("CashReconId")
                        .HasColumnName("CASH_RECON_ID");

                    b.Property<int>("PayId")
                        .HasColumnName("PAY_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CashReconId", "PayId");

                    b.HasIndex("PayId");

                    b.ToTable("DMT_CASH_RECON_PAY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconStmnt", b =>
                {
                    b.Property<int>("CashReconId")
                        .HasColumnName("CASH_RECON_ID");

                    b.Property<int>("CommStmntId")
                        .HasColumnName("COMM_STMNT_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CashReconId", "CommStmntId");

                    b.HasIndex("CommStmntId");

                    b.ToTable("DMT_CASH_RECON_STMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtComm", b =>
                {
                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<string>("ActCd")
                        .IsRequired()
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<decimal?>("AdjAmt")
                        .HasColumnName("ADJ_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("ApplDt")
                        .HasColumnName("APPL_DT");

                    b.Property<decimal?>("ApplRt")
                        .HasColumnName("APPL_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CntlNum")
                        .HasColumnName("CNTL_NUM")
                        .HasMaxLength(20);

                    b.Property<decimal>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("CompInd")
                        .HasColumnName("COMP_IND")
                        .HasMaxLength(2);

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("DueAmt")
                        .HasColumnName("DUE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommAmt")
                        .HasColumnName("EXP_COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommRt")
                        .HasColumnName("EXP_COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<DateTime?>("ExtrctDt")
                        .HasColumnName("EXTRCT_DT");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("GrpPolNum")
                        .HasColumnName("GRP_POL_NUM")
                        .HasMaxLength(30);

                    b.Property<decimal?>("GrsPremAmt")
                        .HasColumnName("GRS_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("IppDt")
                        .HasColumnName("IPP_DT");

                    b.Property<int?>("IssAgeNum")
                        .HasColumnName("ISS_AGE_NUM");

                    b.Property<DateTime?>("IssDt")
                        .HasColumnName("ISS_DT");

                    b.Property<string>("IssStCd")
                        .HasColumnName("ISS_ST_CD")
                        .HasMaxLength(3);

                    b.Property<int?>("LnkCommId")
                        .HasColumnName("LNK_COMM_ID");

                    b.Property<DateTime?>("LstReconDt")
                        .HasColumnName("LST_RECON_DT");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<DateTime>("OrigPrcsDt")
                        .HasColumnName("ORIG_PRCS_DT");

                    b.Property<DateTime?>("OrigReconDt")
                        .HasColumnName("ORIG_RECON_DT");

                    b.Property<DateTime?>("PolDt")
                        .HasColumnName("POL_DT");

                    b.Property<string>("PolNum")
                        .IsRequired()
                        .HasColumnName("POL_NUM")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PremDueDt")
                        .HasColumnName("PREM_DUE_DT");

                    b.Property<string>("PremModeCd")
                        .IsRequired()
                        .HasColumnName("PREM_MODE_CD")
                        .HasMaxLength(5);

                    b.Property<int>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<string>("RcvrId")
                        .HasColumnName("RCVR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("ResStCd")
                        .HasColumnName("RES_ST_CD")
                        .HasMaxLength(3);

                    b.Property<string>("SndrId")
                        .HasColumnName("SNDR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("SrcCarrCd")
                        .HasColumnName("SRC_CARR_CD")
                        .HasMaxLength(25);

                    b.Property<string>("SrcFileName")
                        .HasColumnName("SRC_FILE_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("StatCd")
                        .IsRequired()
                        .HasColumnName("STAT_CD")
                        .HasMaxLength(1);

                    b.Property<DateTime>("StatDt")
                        .HasColumnName("STAT_DT");

                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("TransDt")
                        .HasColumnName("TRANS_DT");

                    b.Property<int?>("TransSeqNum")
                        .HasColumnName("TRANS_SEQ_NUM");

                    b.Property<string>("TrnsmsnUniqId")
                        .HasColumnName("TRNSMSN_UNIQ_ID")
                        .HasMaxLength(50);

                    b.Property<int>("YrNum")
                        .HasColumnName("YR_NUM");

                    b.HasKey("CommId");

                    b.HasIndex("ActCd");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.HasIndex("PremModeCd");

                    b.HasIndex("ProdId");

                    b.HasIndex("StatCd");

                    b.HasIndex("TmCd");

                    b.ToTable("DMT_COMM");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommAgnt", b =>
                {
                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<int>("CommAgntSeqNum")
                        .HasColumnName("COMM_AGNT_SEQ_NUM");

                    b.Property<string>("AgntCntrNum")
                        .HasColumnName("AGNT_CNTR_NUM")
                        .HasMaxLength(6);

                    b.Property<string>("AgntNpn")
                        .HasColumnName("AGNT_NPN")
                        .HasMaxLength(10);

                    b.Property<decimal?>("AgntSplitPct")
                        .HasColumnName("AGNT_SPLIT_PCT")
                        .HasColumnType("decimal(10, 9)");

                    b.Property<string>("AgntSsnTinNum")
                        .HasColumnName("AGNT_SSN_TIN_NUM")
                        .HasMaxLength(9);

                    b.Property<string>("AgntSsnTinTypCd")
                        .HasColumnName("AGNT_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.Property<decimal?>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("GrsPremAmt")
                        .HasColumnName("GRS_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("SrcTinTypCd")
                        .HasColumnName("SRC_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.HasKey("CommId", "CommAgntSeqNum");

                    b.HasIndex("AgntSsnTinTypCd");

                    b.ToTable("DMT_COMM_AGNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommClnt", b =>
                {
                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<int>("CommClntSeqNum")
                        .HasColumnName("COMM_CLNT_SEQ_NUM");

                    b.Property<string>("ClntFirstName")
                        .HasColumnName("CLNT_FIRST_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntFullName")
                        .HasColumnName("CLNT_FULL_NAME")
                        .HasMaxLength(200);

                    b.Property<string>("ClntLstName")
                        .HasColumnName("CLNT_LST_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntMidName")
                        .HasColumnName("CLNT_MID_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntPrfxName")
                        .HasColumnName("CLNT_PRFX_NAME")
                        .HasMaxLength(25);

                    b.Property<string>("ClntSfxName")
                        .HasColumnName("CLNT_SFX_NAME")
                        .HasMaxLength(25);

                    b.Property<string>("ClntSsnTinNum")
                        .HasColumnName("CLNT_SSN_TIN_NUM")
                        .HasMaxLength(9);

                    b.Property<string>("ClntSsnTinTypCd")
                        .HasColumnName("CLNT_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("SrcSsnTinTypCd")
                        .HasColumnName("SRC_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.HasKey("CommId", "CommClntSeqNum");

                    b.HasIndex("ClntSsnTinTypCd");

                    b.ToTable("DMT_COMM_CLNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommCmnt", b =>
                {
                    b.Property<int>("CommCmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMM_CMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CmntTxt")
                        .IsRequired()
                        .HasColumnName("CMNT_TXT")
                        .HasMaxLength(4000);

                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CommCmntId");

                    b.ToTable("DMT_COMM_CMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErr", b =>
                {
                    b.Property<int>("CommId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMM_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActCd")
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<decimal?>("AdjAmt")
                        .HasColumnName("ADJ_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("ApplDt")
                        .HasColumnName("APPL_DT");

                    b.Property<decimal?>("ApplRt")
                        .HasColumnName("APPL_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("AssocFmInd")
                        .HasColumnName("ASSOC_FM_IND")
                        .HasMaxLength(15);

                    b.Property<int?>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<int?>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CntlNum")
                        .HasColumnName("CNTL_NUM")
                        .HasMaxLength(20);

                    b.Property<decimal?>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("CommEvntTypCd")
                        .HasColumnName("COMM_EVNT_TYP_CD")
                        .HasMaxLength(5);

                    b.Property<decimal?>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("CommTypCd")
                        .HasColumnName("COMM_TYP_CD")
                        .HasMaxLength(5);

                    b.Property<string>("CompInd")
                        .HasColumnName("COMP_IND")
                        .HasMaxLength(2);

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CusipNum")
                        .HasColumnName("CUSIP_NUM")
                        .HasMaxLength(9);

                    b.Property<decimal?>("DueAmt")
                        .HasColumnName("DUE_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommAmt")
                        .HasColumnName("EXP_COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommRt")
                        .HasColumnName("EXP_COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<DateTime?>("ExtrctDt")
                        .HasColumnName("EXTRCT_DT");

                    b.Property<int?>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int?>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("GrpPolNum")
                        .HasColumnName("GRP_POL_NUM")
                        .HasMaxLength(30);

                    b.Property<decimal?>("GrsPremAmt")
                        .HasColumnName("GRS_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<DateTime?>("IppDt")
                        .HasColumnName("IPP_DT");

                    b.Property<int?>("IssAgeNum")
                        .HasColumnName("ISS_AGE_NUM");

                    b.Property<DateTime?>("IssDt")
                        .HasColumnName("ISS_DT");

                    b.Property<string>("IssStCd")
                        .HasColumnName("ISS_ST_CD")
                        .HasMaxLength(3);

                    b.Property<int?>("LnkCommId")
                        .HasColumnName("LNK_COMM_ID");

                    b.Property<DateTime?>("LstReconDt")
                        .HasColumnName("LST_RECON_DT");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<DateTime?>("OrigPrcsDt")
                        .HasColumnName("ORIG_PRCS_DT");

                    b.Property<DateTime?>("OrigReconDt")
                        .HasColumnName("ORIG_RECON_DT");

                    b.Property<DateTime?>("PolDt")
                        .HasColumnName("POL_DT");

                    b.Property<string>("PolNum")
                        .HasColumnName("POL_NUM")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PremDueDt")
                        .HasColumnName("PREM_DUE_DT");

                    b.Property<string>("PremModeCd")
                        .HasColumnName("PREM_MODE_CD")
                        .HasMaxLength(5);

                    b.Property<int?>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<string>("RcvrId")
                        .HasColumnName("RCVR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("ResStCd")
                        .HasColumnName("RES_ST_CD")
                        .HasMaxLength(3);

                    b.Property<string>("SndrId")
                        .HasColumnName("SNDR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("SrcActCd")
                        .HasColumnName("SRC_ACT_CD")
                        .HasMaxLength(5);

                    b.Property<string>("SrcCarrId")
                        .HasColumnName("SRC_CARR_ID")
                        .HasMaxLength(25);

                    b.Property<string>("SrcCommExtCd")
                        .HasColumnName("SRC_COMM_EXT_CD")
                        .HasMaxLength(5);

                    b.Property<string>("SrcCommOptCd")
                        .HasColumnName("SRC_COMM_OPT_CD")
                        .HasMaxLength(5);

                    b.Property<string>("SrcFileName")
                        .HasColumnName("SRC_FILE_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("SrcPremModeCd")
                        .HasColumnName("SRC_PREM_MODE_CD")
                        .HasMaxLength(15);

                    b.Property<string>("SrcProdCd")
                        .HasColumnName("SRC_PROD_CD")
                        .HasMaxLength(25);

                    b.Property<string>("SrcProdTypCd")
                        .HasColumnName("SRC_PROD_TYP_CD")
                        .HasMaxLength(5);

                    b.Property<string>("SrcTmCd")
                        .HasColumnName("SRC_TM_CD")
                        .HasMaxLength(5);

                    b.Property<string>("StatCd")
                        .HasColumnName("STAT_CD")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StatDt")
                        .HasColumnName("STAT_DT");

                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("TransDt")
                        .HasColumnName("TRANS_DT");

                    b.Property<int?>("TransSeqNum")
                        .HasColumnName("TRANS_SEQ_NUM");

                    b.Property<string>("TrnmsnUniqId")
                        .HasColumnName("TRNMSN_UNIQ_ID")
                        .HasMaxLength(50);

                    b.Property<int?>("YrNum")
                        .HasColumnName("YR_NUM");

                    b.HasKey("CommId");

                    b.HasIndex("ActCd");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.HasIndex("PremModeCd");

                    b.HasIndex("ProdId");

                    b.HasIndex("StatCd");

                    b.HasIndex("TmCd");

                    b.ToTable("DMT_COMM_ERR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErrAgnt", b =>
                {
                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<int>("CommAgntSeqNum")
                        .HasColumnName("COMM_AGNT_SEQ_NUM");

                    b.Property<string>("AgntCntrNum")
                        .HasColumnName("AGNT_CNTR_NUM")
                        .HasMaxLength(6);

                    b.Property<string>("AgntNpn")
                        .HasColumnName("AGNT_NPN")
                        .HasMaxLength(10);

                    b.Property<decimal?>("AgntSplitPct")
                        .HasColumnName("AGNT_SPLIT_PCT")
                        .HasColumnType("decimal(10, 9)");

                    b.Property<string>("AgntSsnTinNum")
                        .HasColumnName("AGNT_SSN_TIN_NUM")
                        .HasMaxLength(9);

                    b.Property<string>("AgntSsnTinTypCd")
                        .HasColumnName("AGNT_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.Property<decimal?>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("GrsPremAmt")
                        .HasColumnName("GRS_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("SrcTinTypCd")
                        .HasColumnName("SRC_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.HasKey("CommId", "CommAgntSeqNum");

                    b.HasIndex("AgntSsnTinTypCd");

                    b.ToTable("DMT_COMM_ERR_AGNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErrClnt", b =>
                {
                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<int>("CommClntSeqNum")
                        .HasColumnName("COMM_CLNT_SEQ_NUM");

                    b.Property<string>("ClntFirstName")
                        .HasColumnName("CLNT_FIRST_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntFullName")
                        .HasColumnName("CLNT_FULL_NAME")
                        .HasMaxLength(200);

                    b.Property<string>("ClntLstName")
                        .HasColumnName("CLNT_LST_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntMidName")
                        .HasColumnName("CLNT_MID_NAME")
                        .HasMaxLength(50);

                    b.Property<string>("ClntPrfxName")
                        .HasColumnName("CLNT_PRFX_NAME")
                        .HasMaxLength(25);

                    b.Property<string>("ClntSfxName")
                        .HasColumnName("CLNT_SFX_NAME")
                        .HasMaxLength(25);

                    b.Property<string>("ClntSsnTinNum")
                        .HasColumnName("CLNT_SSN_TIN_NUM")
                        .HasMaxLength(9);

                    b.Property<string>("ClntSsnTinTypCd")
                        .HasColumnName("CLNT_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("SrcSsnTinTypCd")
                        .HasColumnName("SRC_SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.HasKey("CommId", "CommClntSeqNum");

                    b.HasIndex("ClntSsnTinTypCd");

                    b.ToTable("DMT_COMM_ERR_CLNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommMsg", b =>
                {
                    b.Property<int>("CommMsgId")
                        .HasColumnName("COMM_MSG_ID");

                    b.Property<bool?>("AccptInd")
                        .HasColumnName("ACCPT_IND");

                    b.Property<int>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("MsgCd")
                        .IsRequired()
                        .HasColumnName("MSG_CD")
                        .HasMaxLength(25);

                    b.Property<string>("MsgTxt")
                        .HasColumnName("MSG_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("MsgTypCd")
                        .HasColumnName("MSG_TYP_CD")
                        .HasMaxLength(10);

                    b.Property<string>("TechMsgTxt")
                        .HasColumnName("TECH_MSG_TXT")
                        .HasMaxLength(4000);

                    b.HasKey("CommMsgId");

                    b.HasIndex("MsgCd");

                    b.HasIndex("MsgTypCd");

                    b.ToTable("DMT_COMM_MSG");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommStmnt", b =>
                {
                    b.Property<int>("CommStmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMM_STMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CrtById")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY_ID")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ExtrctDt")
                        .HasColumnName("EXTRCT_DT")
                        .HasColumnType("datetime");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("SndrId")
                        .HasColumnName("SNDR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("SrcFileName")
                        .IsRequired()
                        .HasColumnName("SRC_FILE_NAME")
                        .HasMaxLength(100);

                    b.Property<decimal>("SumCommAmt")
                        .HasColumnName("SUM_COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal>("SumPremAmt")
                        .HasColumnName("SUM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int>("TotRecCnt")
                        .HasColumnName("TOT_REC_CNT");

                    b.HasKey("CommStmntId");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_COMM_STMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommWpSnpsht", b =>
                {
                    b.Property<int>("CommWpSnpshtId")
                        .HasColumnName("COMM_WP_SNPSHT_ID");

                    b.Property<string>("ActCd")
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<string>("AgntCntrNum")
                        .HasColumnName("AGNT_CNTR_NUM")
                        .HasMaxLength(6);

                    b.Property<string>("AgntNpn")
                        .HasColumnName("AGNT_NPN")
                        .HasMaxLength(10);

                    b.Property<decimal?>("AgntSplitPct")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AGNT_SPLIT_PCT")
                        .HasColumnType("numeric(10, 9)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CarrName")
                        .HasColumnName("CARR_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("Carrierid")
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<int?>("CaseWpId")
                        .HasColumnName("CASE_WP_ID");

                    b.Property<decimal?>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<decimal?>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("numeric(12, 9)");

                    b.Property<DateTime?>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CrtTs")
                        .HasColumnName("CRT_TS");

                    b.Property<DateTime?>("EffDt")
                        .HasColumnName("EFF_DT")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ExpCommAmt")
                        .HasColumnName("EXP_COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommRt")
                        .HasColumnName("EXP_COMM_RT")
                        .HasColumnType("numeric(12, 9)");

                    b.Property<int?>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<DateTime?>("PolDt")
                        .HasColumnName("POL_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("PremModeCd")
                        .HasColumnName("PREM_MODE_CD")
                        .HasMaxLength(5);

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TransDt")
                        .HasColumnName("TRANS_DT")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WpAmt")
                        .HasColumnName("WP_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("YrNum")
                        .HasColumnName("YR_NUM");

                    b.HasKey("CommWpSnpshtId");

                    b.ToTable("DMT_COMM_WP_SNPSHT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommWpSnpshtHist", b =>
                {
                    b.Property<int>("CommWpSnpshtId")
                        .HasColumnName("COMM_WP_SNPSHT_ID");

                    b.Property<string>("ActCd")
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<string>("AgntCntrNum")
                        .HasColumnName("AGNT_CNTR_NUM")
                        .HasMaxLength(6);

                    b.Property<string>("AgntNpn")
                        .HasColumnName("AGNT_NPN")
                        .HasMaxLength(10);

                    b.Property<decimal?>("AgntSplitPct")
                        .HasColumnName("AGNT_SPLIT_PCT")
                        .HasColumnType("numeric(10, 9)");

                    b.Property<string>("CarrName")
                        .HasColumnName("CARR_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("Carrierid")
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<int>("CaseId")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasColumnName("CASE_TYPE")
                        .HasMaxLength(15);

                    b.Property<int?>("CaseWpId")
                        .HasColumnName("CASE_WP_ID");

                    b.Property<decimal?>("CommAmt")
                        .HasColumnName("COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("CommId")
                        .HasColumnName("COMM_ID");

                    b.Property<decimal?>("CommPremAmt")
                        .HasColumnName("COMM_PREM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("CommRt")
                        .HasColumnName("COMM_RT")
                        .HasColumnType("numeric(12, 9)");

                    b.Property<DateTime?>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CrtTs")
                        .HasColumnName("CRT_TS");

                    b.Property<DateTime?>("EffDt")
                        .HasColumnName("EFF_DT")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ExpCommAmt")
                        .HasColumnName("EXP_COMM_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<decimal?>("ExpCommRt")
                        .HasColumnName("EXP_COMM_RT")
                        .HasColumnType("numeric(12, 9)");

                    b.Property<int?>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<DateTime?>("PolDt")
                        .HasColumnName("POL_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("PremModeCd")
                        .HasColumnName("PREM_MODE_CD")
                        .HasMaxLength(5);

                    b.Property<string>("RsvpContractNumber")
                        .HasColumnName("RSVP_CONTRACT_NUMBER")
                        .HasMaxLength(6);

                    b.Property<string>("RsvpName")
                        .HasColumnName("RSVP_NAME")
                        .HasMaxLength(60);

                    b.Property<string>("RsvpStaffCd")
                        .IsRequired()
                        .HasColumnName("RSVP_STAFF_CD")
                        .HasMaxLength(3);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TransDt")
                        .HasColumnName("TRANS_DT")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WpAmt")
                        .HasColumnName("WP_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int?>("YrNum")
                        .HasColumnName("YR_NUM");

                    b.HasKey("CommWpSnpshtId");

                    b.ToTable("DMT_COMM_WP_SNPSHT_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCusipProdMap", b =>
                {
                    b.Property<string>("SndrId")
                        .HasColumnName("SNDR_ID")
                        .HasMaxLength(10);

                    b.Property<string>("CusipNum")
                        .HasColumnName("CUSIP_NUM")
                        .HasMaxLength(9);

                    b.Property<string>("CommOptCd")
                        .HasColumnName("COMM_OPT_CD")
                        .HasMaxLength(5);

                    b.Property<string>("CommExtCd")
                        .HasColumnName("COMM_EXT_CD")
                        .HasMaxLength(10);

                    b.Property<string>("ProdTypCd")
                        .HasColumnName("PROD_TYP_CD")
                        .HasMaxLength(10);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.HasKey("SndrId", "CusipNum", "CommOptCd", "CommExtCd", "ProdTypCd");

                    b.ToTable("DMT_CUSIP_PROD_MAP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFb", b =>
                {
                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FbCd")
                        .IsRequired()
                        .HasColumnName("FB_CD")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.HasKey("FbId");

                    b.ToTable("DMT_FB");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFbga", b =>
                {
                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("FbId", "GaId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_FBGA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFeed", b =>
                {
                    b.Property<int>("FeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FEED_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PrtnrFeedId")
                        .HasColumnName("PRTNR_FEED_ID");

                    b.HasKey("FeedId");

                    b.HasIndex("PrtnrFeedId");

                    b.ToTable("DMT_FEED");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFeedFile", b =>
                {
                    b.Property<int>("FeedFileId")
                        .HasColumnName("FEED_FILE_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FeedId")
                        .HasColumnName("FEED_ID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("FILE_NAME")
                        .HasMaxLength(250);

                    b.Property<int>("PrtnrFeedFileId")
                        .HasColumnName("PRTNR_FEED_FILE_ID");

                    b.HasKey("FeedFileId");

                    b.HasIndex("FeedId");

                    b.HasIndex("PrtnrFeedFileId");

                    b.ToTable("DMT_FEED_FILE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtGa", b =>
                {
                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GaCd")
                        .IsRequired()
                        .HasColumnName("GA_CD")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.HasKey("GaId");

                    b.ToTable("DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtMsgCd", b =>
                {
                    b.Property<string>("MsgCd")
                        .HasColumnName("MSG_CD")
                        .HasMaxLength(25);

                    b.Property<bool>("AccptInd")
                        .HasColumnName("ACCPT_IND");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("MsgTxt")
                        .IsRequired()
                        .HasColumnName("MSG_TXT")
                        .HasMaxLength(1000);

                    b.Property<string>("MsgTypCd")
                        .IsRequired()
                        .HasColumnName("MSG_TYP_CD")
                        .HasMaxLength(10);

                    b.HasKey("MsgCd");

                    b.HasIndex("MsgTypCd");

                    b.ToTable("DMT_MSG_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtMsgTypCd", b =>
                {
                    b.Property<string>("MsgTypCd")
                        .HasColumnName("MSG_TYP_CD")
                        .HasMaxLength(10);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("MsgTypCd");

                    b.ToTable("DMT_MSG_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPay", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("ChkWireNum")
                        .HasColumnName("CHK_WIRE_NUM")
                        .HasMaxLength(20);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DepDt")
                        .HasColumnName("DEP_DT");

                    b.Property<decimal>("EftOvrAmt")
                        .HasColumnName("EFT_OVR_AMT")
                        .HasColumnType("numeric(16, 2)");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("ModById")
                        .HasColumnName("MOD_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<DateTime>("PayDt")
                        .HasColumnName("PAY_DT");

                    b.Property<DateTime?>("StmntId")
                        .HasColumnName("STMNT_ID")
                        .HasColumnType("datetime");

                    b.Property<string>("ValStmntById")
                        .HasColumnName("VAL_STMNT_BY_ID")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ValStmntDt")
                        .HasColumnName("VAL_STMNT_DT")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ValStmntInd")
                        .HasColumnName("VAL_STMNT_IND");

                    b.HasKey("PayId");

                    b.HasIndex("CarrId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_PAY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPayCmnt", b =>
                {
                    b.Property<int>("PayCmntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAY_CMNT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CmntTxt")
                        .IsRequired()
                        .HasColumnName("CMNT_TXT")
                        .HasMaxLength(4000);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayId")
                        .HasColumnName("PAY_ID");

                    b.HasKey("PayCmntId");

                    b.HasIndex("PayId");

                    b.ToTable("DMT_PAY_CMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPremModeCd", b =>
                {
                    b.Property<string>("PremModeCd")
                        .HasColumnName("PREM_MODE_CD")
                        .HasMaxLength(5);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .HasColumnName("CRT_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .HasColumnName("CRT_DT");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("PremModeCd");

                    b.ToTable("DMT_PREM_MODE_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProd", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("Carrierid")
                        .HasColumnName("CARRIERID")
                        .HasMaxLength(6);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<string>("ProdCd")
                        .IsRequired()
                        .HasColumnName("PROD_CD")
                        .HasMaxLength(25);

                    b.Property<bool?>("ProdRtInd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_RT_IND")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ProdTypId")
                        .HasColumnName("PROD_TYP_ID");

                    b.Property<bool?>("ProdTypRtInd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_TYP_RT_IND")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProdId");

                    b.HasIndex("CarrId");

                    b.HasIndex("ProdTypId");

                    b.ToTable("DMT_PROD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdAltName", b =>
                {
                    b.Property<int>("ProdAltNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_ALT_NAME_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<int>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.HasKey("ProdAltNameId");

                    b.HasIndex("ProdId");

                    b.ToTable("DMT_PROD_ALT_NAME");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdFbga", b =>
                {
                    b.Property<int>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<int>("FbId")
                        .HasColumnName("FB_ID");

                    b.Property<int>("GaId")
                        .HasColumnName("GA_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("ProdId", "FbId", "GaId");

                    b.HasIndex("FbId");

                    b.HasIndex("GaId");

                    b.ToTable("DMT_PROD_FBGA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdRt", b =>
                {
                    b.Property<int>("ProdRtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_RT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActCd")
                        .IsRequired()
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<int?>("AgeEndNum")
                        .HasColumnName("AGE_END_NUM");

                    b.Property<int?>("AgeStartNum")
                        .HasColumnName("AGE_START_NUM");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EffDt")
                        .HasColumnName("EFF_DT");

                    b.Property<DateTime?>("ExpDt")
                        .HasColumnName("EXP_DT");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<int>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<decimal>("Rate")
                        .HasColumnName("RATE")
                        .HasColumnType("decimal(10, 9)");

                    b.Property<string>("StCd")
                        .HasColumnName("ST_CD")
                        .HasMaxLength(3);

                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<int>("YrEndNum")
                        .HasColumnName("YR_END_NUM");

                    b.Property<int>("YrStartNum")
                        .HasColumnName("YR_START_NUM");

                    b.HasKey("ProdRtId");

                    b.HasIndex("ActCd");

                    b.HasIndex("ProdId");

                    b.HasIndex("StCd");

                    b.HasIndex("TmCd");

                    b.ToTable("DMT_PROD_RT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdTyp", b =>
                {
                    b.Property<int>("ProdTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_TYP_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<string>("ProdTypCd")
                        .IsRequired()
                        .HasColumnName("PROD_TYP_CD")
                        .HasMaxLength(25);

                    b.HasKey("ProdTypId");

                    b.ToTable("DMT_PROD_TYP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdTypRt", b =>
                {
                    b.Property<int>("ProdTypRtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROD_TYP_RT_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActCd")
                        .IsRequired()
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<int?>("AgeEndNum")
                        .HasColumnName("AGE_END_NUM");

                    b.Property<int?>("AgeStartNum")
                        .HasColumnName("AGE_START_NUM");

                    b.Property<int>("CarrId")
                        .HasColumnName("CARR_ID");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EffDt")
                        .HasColumnName("EFF_DT");

                    b.Property<DateTime?>("ExpDt")
                        .HasColumnName("EXP_DT");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<int>("ProdTypId")
                        .HasColumnName("PROD_TYP_ID");

                    b.Property<decimal>("Rate")
                        .HasColumnName("RATE")
                        .HasColumnType("decimal(10, 9)");

                    b.Property<string>("StCd")
                        .HasColumnName("ST_CD")
                        .HasMaxLength(3);

                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<int>("YrEndNum")
                        .HasColumnName("YR_END_NUM");

                    b.Property<int>("YrStartNum")
                        .HasColumnName("YR_START_NUM");

                    b.HasKey("ProdTypRtId");

                    b.HasIndex("ActCd");

                    b.HasIndex("CarrId");

                    b.HasIndex("StCd");

                    b.HasIndex("TmCd");

                    b.ToTable("DMT_PROD_TYP_RT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPrtnr", b =>
                {
                    b.Property<int>("PrtnrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRTNR_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(500);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<bool>("RcvrId")
                        .HasColumnName("RCVR_ID");

                    b.Property<bool>("SndrId")
                        .HasColumnName("SNDR_ID");

                    b.HasKey("PrtnrId");

                    b.ToTable("DMT_PRTNR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPrtnrFeed", b =>
                {
                    b.Property<int>("PrtnrFeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRTNR_FEED_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(500);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<int>("PrtnrId")
                        .HasColumnName("PRTNR_ID");

                    b.Property<string>("SrcAdptr")
                        .HasColumnName("SRC_ADPTR")
                        .HasMaxLength(100);

                    b.Property<bool>("SrcInd")
                        .HasColumnName("SRC_IND");

                    b.Property<string>("TrgtAdptr")
                        .HasColumnName("TRGT_ADPTR")
                        .HasMaxLength(100);

                    b.Property<bool>("TrgtInd")
                        .HasColumnName("TRGT_IND");

                    b.HasKey("PrtnrFeedId");

                    b.HasIndex("PrtnrId");

                    b.ToTable("DMT_PRTNR_FEED");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPrtnrFeedFile", b =>
                {
                    b.Property<int>("PrtnrFeedFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRTNR_FEED_FILE_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(500);

                    b.Property<string>("FileNameExt")
                        .HasColumnName("FILE_NAME_EXT")
                        .HasMaxLength(250);

                    b.Property<string>("FileNamePttrn")
                        .IsRequired()
                        .HasColumnName("FILE_NAME_PTTRN")
                        .HasMaxLength(250);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.Property<string>("PathName")
                        .IsRequired()
                        .HasColumnName("PATH_NAME")
                        .HasMaxLength(250);

                    b.Property<int>("PrtnrFeedId")
                        .HasColumnName("PRTNR_FEED_ID");

                    b.Property<bool>("ReqdInd")
                        .HasColumnName("REQD_IND");

                    b.Property<string>("TstInd")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TST_IND")
                        .HasDefaultValueSql("('N')")
                        .HasMaxLength(1);

                    b.HasKey("PrtnrFeedFileId");

                    b.HasIndex("PrtnrFeedId");

                    b.ToTable("DMT_PRTNR_FEED_FILE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtSsnTinTypCd", b =>
                {
                    b.Property<string>("SsnTinTypCd")
                        .HasColumnName("SSN_TIN_TYP_CD")
                        .HasMaxLength(3);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("SsnTinTypCd");

                    b.ToTable("DMT_SSN_TIN_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtStatCd", b =>
                {
                    b.Property<string>("StatCd")
                        .HasColumnName("STAT_CD")
                        .HasMaxLength(1);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(25);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("StatCd");

                    b.ToTable("DMT_STAT_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtStCd", b =>
                {
                    b.Property<string>("StCd")
                        .HasColumnName("ST_CD")
                        .HasMaxLength(3);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(100);

                    b.HasKey("StCd");

                    b.ToTable("DMT_ST_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtTmCd", b =>
                {
                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(100);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.HasKey("TmCd");

                    b.ToTable("DMT_TM_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtValMap", b =>
                {
                    b.Property<string>("SrcName")
                        .HasColumnName("SRC_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("SrcVal")
                        .HasColumnName("SRC_VAL")
                        .HasMaxLength(100);

                    b.Property<string>("TrgtName")
                        .HasColumnName("TRGT_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT");

                    b.Property<string>("TrgtVal")
                        .IsRequired()
                        .HasColumnName("TRGT_VAL")
                        .HasMaxLength(100);

                    b.HasKey("SrcName", "SrcVal", "TrgtName");

                    b.ToTable("DMT_VAL_MAP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtWpCalcCd", b =>
                {
                    b.Property<string>("WpCalcCd")
                        .HasColumnName("WP_CALC_CD")
                        .HasMaxLength(10);

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescTxt")
                        .IsRequired()
                        .HasColumnName("DESC_TXT")
                        .HasMaxLength(100);

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime");

                    b.HasKey("WpCalcCd");

                    b.ToTable("DMT_WP_CALC_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtWpCalcRule", b =>
                {
                    b.Property<int>("WpCalcRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WP_CALC_RULE_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActCd")
                        .HasColumnName("ACT_CD")
                        .HasMaxLength(4);

                    b.Property<string>("CaseAmtName")
                        .HasColumnName("CASE_AMT_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("CommAmtName")
                        .HasColumnName("COMM_AMT_NAME")
                        .HasMaxLength(100);

                    b.Property<bool?>("CompInd")
                        .HasColumnName("COMP_IND");

                    b.Property<string>("CrtBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CrtDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CRT_DT")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("FactorRt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FACTOR_RT")
                        .HasColumnType("decimal(12, 9)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ModBy")
                        .HasColumnName("MOD_BY")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDt")
                        .HasColumnName("MOD_DT")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProdId")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("ProdTypId")
                        .HasColumnName("PROD_TYP_ID");

                    b.Property<string>("TmCd")
                        .HasColumnName("TM_CD")
                        .HasMaxLength(4);

                    b.Property<string>("WpCalcCd")
                        .IsRequired()
                        .HasColumnName("WP_CALC_CD")
                        .HasMaxLength(10);

                    b.Property<int?>("YrInfrcNum")
                        .HasColumnName("YR_INFRC_NUM");

                    b.HasKey("WpCalcRuleId");

                    b.ToTable("DMT_WP_CALC_RULE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtAdt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtAdtTypCd", "AdtTypCdNavigation")
                        .WithMany("DmtAdt")
                        .HasForeignKey("AdtTypCd")
                        .HasConstraintName("FK_DMT_ADT_DMT_ADT_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtAdtDtl", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtAdt", "Adt")
                        .WithMany("DmtAdtDtl")
                        .HasForeignKey("AdtId")
                        .HasConstraintName("FK_DMT_ADT_DTL_DMT_ADT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCalEntry", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCalEntry", "CalEntry")
                        .WithOne("InverseCalEntry")
                        .HasForeignKey("PLD.WebApi.Angular.Models.DmtCalEntry", "CalEntryId")
                        .HasConstraintName("FK_DMT_CAL_ENTRY_DMT_CAL_ENTRY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCarrFbga", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCarrFbga")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_CARR_FBGA_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCarrFbga")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_CARR_FBGA_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCarrFbga")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_CARR_FBGA_DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCase", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCase")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_CASE_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCase")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_CASE_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCase")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_CASE_DMT_GA");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtCase")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_CASE_DMT_PROD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProdTyp", "ProdTyp")
                        .WithMany("DmtCase")
                        .HasForeignKey("ProdTypId")
                        .HasConstraintName("FK_DMT_CASE_DMT_PROD_TYP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAddCov", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseAddCov")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_ADD_COV_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAddCovHist", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCaseHist", "Case")
                        .WithMany("DmtCaseAddCovHist")
                        .HasForeignKey("CaseId", "CaseHistTs")
                        .HasConstraintName("FK_DMT_CASE_ADD_COV_HIST_DMT_CASE_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseAgnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseAgnt")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_AGNT_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseCmnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseCmnt")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_CMNT_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseHist", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_CASE");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_GA");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_PROD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProdTyp", "ProdTyp")
                        .WithMany("DmtCaseHist")
                        .HasForeignKey("ProdTypId")
                        .HasConstraintName("FK_DMT_CASE_HIST_DMT_PROD_TYP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseLifePartic", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseLifePartic")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_LIFE_PARTIC_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseLifeParticHist", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCaseHist", "Case")
                        .WithMany("DmtCaseLifeParticHist")
                        .HasForeignKey("CaseId", "CaseHistTs")
                        .HasConstraintName("FK_DMT_CASE_LIFE_PARTIC_HIST_DMT_CASE_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseMsg", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtMsgCd", "MsgCdNavigation")
                        .WithMany("DmtCaseMsg")
                        .HasForeignKey("MsgCd")
                        .HasConstraintName("FK_DMT_CASE_MSG_DMT_MSG_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtMsgTypCd", "MsgTypCdNavigation")
                        .WithMany("DmtCaseMsg")
                        .HasForeignKey("MsgTypCd")
                        .HasConstraintName("FK_DMT_CASE_MSG_DMT_MSG_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseRsvp", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseRsvp")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_RSVP_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseRsvpHist", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCaseHist", "Case")
                        .WithMany("DmtCaseRsvpHist")
                        .HasForeignKey("CaseId", "CaseHistTs")
                        .HasConstraintName("FK_DMT_CASE_RSVP_HIST_DMT_CASE_HIST");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCaseWpRsvp", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCase", "Case")
                        .WithMany("DmtCaseWpRsvp")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK_DMT_CASE_WP_RSVP_DMT_CASE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashRecon", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCashRecon")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_CASH_RECON_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCashRecon")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_CASH_RECON_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCashRecon")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_CASH_RECON_DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconCmnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCashRecon", "CashRecon")
                        .WithMany("DmtCashReconCmnt")
                        .HasForeignKey("CashReconId")
                        .HasConstraintName("FK_DMT_CASH_RECON_CMNT_DMT_CASH_RECON");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconPay", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCashRecon", "CashRecon")
                        .WithMany("DmtCashReconPay")
                        .HasForeignKey("CashReconId")
                        .HasConstraintName("FK_DMT_CASH_RECON_PAY_DMT_CASH_RECON");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtPay", "Pay")
                        .WithMany("DmtCashReconPay")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_DMT_CASH_RECON_PAY_DMT_PAY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCashReconStmnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCashRecon", "CashRecon")
                        .WithMany("DmtCashReconStmnt")
                        .HasForeignKey("CashReconId")
                        .HasConstraintName("FK_DMT_CASH_RECON_STMNT_DMT_CASH_RECON");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCommStmnt", "CommStmnt")
                        .WithMany("DmtCashReconStmnt")
                        .HasForeignKey("CommStmntId")
                        .HasConstraintName("FK_DMT_CASH_RECON_STMNT_DMT_COMM_STMNT");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtComm", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtActCd", "ActCdNavigation")
                        .WithMany("DmtComm")
                        .HasForeignKey("ActCd")
                        .HasConstraintName("FK_DMT_COMM_DMT_ACT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtComm")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_COMM_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtComm")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_COMM_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtComm")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_COMM_DMT_GA");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtPremModeCd", "PremModeCdNavigation")
                        .WithMany("DmtComm")
                        .HasForeignKey("PremModeCd")
                        .HasConstraintName("FK_DMT_COMM_DMT_PREM_MODE_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtComm")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_COMM_DMT_PROD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtStatCd", "StatCdNavigation")
                        .WithMany("DmtComm")
                        .HasForeignKey("StatCd")
                        .HasConstraintName("FK_DMT_COMM_DMT_STAT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtTmCd", "TmCdNavigation")
                        .WithMany("DmtComm")
                        .HasForeignKey("TmCd")
                        .HasConstraintName("FK_DMT_COMM_DMT_TM_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommAgnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtSsnTinTypCd", "AgntSsnTinTypCdNavigation")
                        .WithMany("DmtCommAgnt")
                        .HasForeignKey("AgntSsnTinTypCd")
                        .HasConstraintName("FK_DMT_COMM_AGNT_DMT_SSN_TIN_TYP_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtComm", "Comm")
                        .WithMany("DmtCommAgnt")
                        .HasForeignKey("CommId")
                        .HasConstraintName("FK_DMT_COMM_AGNT_DMT_COMM");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommClnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtSsnTinTypCd", "ClntSsnTinTypCdNavigation")
                        .WithMany("DmtCommClnt")
                        .HasForeignKey("ClntSsnTinTypCd")
                        .HasConstraintName("FK_DMT_COMM_CLNT_DMT_SSN_TIN_TYP_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtComm", "Comm")
                        .WithMany("DmtCommClnt")
                        .HasForeignKey("CommId")
                        .HasConstraintName("FK_DMT_COMM_CLNT_DMT_COMM");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErr", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtActCd", "ActCdNavigation")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("ActCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_ACT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_GA");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtPremModeCd", "PremModeCdNavigation")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("PremModeCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_PREM_MODE_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_PROD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtStatCd", "StatCdNavigation")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("StatCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_STAT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtTmCd", "TmCdNavigation")
                        .WithMany("DmtCommErr")
                        .HasForeignKey("TmCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_DMT_TM_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErrAgnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtSsnTinTypCd", "AgntSsnTinTypCdNavigation")
                        .WithMany("DmtCommErrAgnt")
                        .HasForeignKey("AgntSsnTinTypCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_AGNT_DMT_SSN_TIN_TYP_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCommErr", "Comm")
                        .WithMany("DmtCommErrAgnt")
                        .HasForeignKey("CommId")
                        .HasConstraintName("FK_DMT_COMM_ERR_AGNT_DMT_COMM_ERR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommErrClnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtSsnTinTypCd", "ClntSsnTinTypCdNavigation")
                        .WithMany("DmtCommErrClnt")
                        .HasForeignKey("ClntSsnTinTypCd")
                        .HasConstraintName("FK_DMT_COMM_ERR_CLNT_DMT_SSN_TIN_TYP_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCommErr", "Comm")
                        .WithMany("DmtCommErrClnt")
                        .HasForeignKey("CommId")
                        .HasConstraintName("FK_DMT_COMM_ERR_CLNT_DMT_COMM_ERR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommMsg", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtMsgCd", "MsgCdNavigation")
                        .WithMany("DmtCommMsg")
                        .HasForeignKey("MsgCd")
                        .HasConstraintName("FK_DMT_COMM_MSG_DMT_MSG_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtMsgTypCd", "MsgTypCdNavigation")
                        .WithMany("DmtCommMsg")
                        .HasForeignKey("MsgTypCd")
                        .HasConstraintName("FK_DMT_COMM_MSG_DMT_MSG_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtCommStmnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtCommStmnt")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_COMM_STMNT_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtCommStmnt")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_COMM_STMNT_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtCommStmnt")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_COMM_STMNT_DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFbga", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtFbga")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_FBGA_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtFbga")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_FBGA_DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFeed", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtPrtnrFeed", "PrtnrFeed")
                        .WithMany("DmtFeed")
                        .HasForeignKey("PrtnrFeedId")
                        .HasConstraintName("FK_DMT_FEED_DMT_PRTNR_FEED");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtFeedFile", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtFeed", "Feed")
                        .WithMany("DmtFeedFile")
                        .HasForeignKey("FeedId")
                        .HasConstraintName("FK_DMT_FEED_FILE_DMT_FEED");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtPrtnrFeedFile", "PrtnrFeedFile")
                        .WithMany("DmtFeedFile")
                        .HasForeignKey("PrtnrFeedFileId")
                        .HasConstraintName("FK_DMT_FEED_FILE_DMT_PRTNR_FEED_FILE");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtMsgCd", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtMsgTypCd", "MsgTypCdNavigation")
                        .WithMany("DmtMsgCd")
                        .HasForeignKey("MsgTypCd")
                        .HasConstraintName("FK_DMT_MSG_CD_DMT_MSG_TYP_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPay", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtPay")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_PAY_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtPay")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_PAY_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtPay")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_PAY_DMT_GA");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPayCmnt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtPay", "Pay")
                        .WithMany("DmtPayCmnt")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_DMT_PAY_CMNT_DMT_PAY");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProd", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtProd")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_PROD_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProdTyp", "ProdTyp")
                        .WithMany("DmtProd")
                        .HasForeignKey("ProdTypId")
                        .HasConstraintName("FK_DMT_PROD_DMT_PROD_TYP");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdAltName", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtProdAltName")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_PROD_ALT_NAME_DMT_PROD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdFbga", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtFb", "Fb")
                        .WithMany("DmtProdFbga")
                        .HasForeignKey("FbId")
                        .HasConstraintName("FK_DMT_PROD_FBGA_DMT_FB");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtGa", "Ga")
                        .WithMany("DmtProdFbga")
                        .HasForeignKey("GaId")
                        .HasConstraintName("FK_DMT_PROD_FBGA_DMT_GA");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtProdFbga")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_PROD_FBGA_DMT_PROD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdRt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtActCd", "ActCdNavigation")
                        .WithMany("DmtProdRt")
                        .HasForeignKey("ActCd")
                        .HasConstraintName("FK_DMT_PROD_RT_DMT_ACT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtProd", "Prod")
                        .WithMany("DmtProdRt")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK_DMT_PROD_RT_DMT_PROD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtStCd", "StCdNavigation")
                        .WithMany("DmtProdRt")
                        .HasForeignKey("StCd")
                        .HasConstraintName("FK_DMT_PROD_RT_DMT_ST_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtTmCd", "TmCdNavigation")
                        .WithMany("DmtProdRt")
                        .HasForeignKey("TmCd")
                        .HasConstraintName("FK_DMT_PROD_RT_DMT_TM_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtProdTypRt", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtActCd", "ActCdNavigation")
                        .WithMany("DmtProdTypRt")
                        .HasForeignKey("ActCd")
                        .HasConstraintName("FK_DMT_PROD_TYP_RT_DMT_ACT_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtCarr", "Carr")
                        .WithMany("DmtProdTypRt")
                        .HasForeignKey("CarrId")
                        .HasConstraintName("FK_DMT_PROD_TYP_RT_DMT_CARR");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtStCd", "StCdNavigation")
                        .WithMany("DmtProdTypRt")
                        .HasForeignKey("StCd")
                        .HasConstraintName("FK_DMT_PROD_TYP_RT_DMT_ST_CD");

                    b.HasOne("PLD.WebApi.Angular.Models.DmtTmCd", "TmCdNavigation")
                        .WithMany("DmtProdTypRt")
                        .HasForeignKey("TmCd")
                        .HasConstraintName("FK_DMT_PROD_TYP_RT_DMT_TM_CD");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPrtnrFeed", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtPrtnr", "Prtnr")
                        .WithMany("DmtPrtnrFeed")
                        .HasForeignKey("PrtnrId")
                        .HasConstraintName("FK_DMT_PRTNR_FEED_DMT_PRTNR");
                });

            modelBuilder.Entity("PLD.WebApi.Angular.Models.DmtPrtnrFeedFile", b =>
                {
                    b.HasOne("PLD.WebApi.Angular.Models.DmtPrtnrFeed", "PrtnrFeed")
                        .WithMany("DmtPrtnrFeedFile")
                        .HasForeignKey("PrtnrFeedId")
                        .HasConstraintName("FK_DMT_PRTNR_FEED_FILE_DMT_PRTNR_FEED");
                });
#pragma warning restore 612, 618
        }
    }
}
